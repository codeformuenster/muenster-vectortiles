name: Hourly PBF/tile update

on:
  schedule:
    - cron: '10 * * * *'
  push:
    tags: 
      - test.update*

env:
  DAILY_PBF: taiwan-daily.osm.pbf
  LATEST_PBF: taiwan-latest.osm.pbf
  TAIWAN_BBOX: 118.1036,20.72799,122.9312,26.60305
  github_api_token: ${{ secrets.GITHUB_TOKEN }}
  repo: ${{ github.repository }}
  tag: daily-taiwan-pbf

jobs:
  update-pbf:
    runs-on: ubuntu-latest
    container:
      image: osmtw/osmctools:latest
    steps:
      - name: Check target PBF file
        uses: wei/curl@v1
        with:
          args: https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.tag }} -o release

      - name: Set target PBF file
        run: |
          grep -E '^ *"body"' release | grep "## $LATEST_PBF" && TARGET_PBF=$LATEST_PBF || TARGET_PBF=$DAILY_PBF
          echo "TARGET_PBF=$TARGET_PBF" >>$GITHUB_ENV

      - name: Download osm.pbf from release
        uses: wei/curl@v1
        with:
          args: -Lo target.osm.pbf https://github.com/${{ github.repository }}/releases/download/${{ env.tag }}/${{ env.TARGET_PBF }}

      - name: Update PBF file by osmctools
        run: |
          osmupdate target.osm.pbf updated.osm.pbf --hour -b=$TAIWAN_BBOX || mv target.osm.pbf updated.osm.pbf
          osmconvert updated.osm.pbf -o=$LATEST_PBF -b=$TAIWAN_BBOX --drop-broken-refs

      - name: Upload updated PBF file as release asset
        uses: typebrook/github-release@v5
        env:
          type: asset
          filename: ${{ env.LATEST_PBF }}
          action: overwrite

      - name: Make release note
        run: |
          printf "$(sed -En 's/^ +\"body": "(.+)"$/\1/p' release)" | sed '/source:/ q' > note
          echo >> note
          echo "## $LATEST_PBF" >> note
          echo 'Updated OSM PBF file.' >> note
          echo "Contains OSM data up to $(osmconvert $LATEST_PBF --out-timestamp)." >> note

      - name: Update release note
        uses: typebrook/github-release@v5
        env:
          type: edit
          filename: note
      
      - name: Upload updated PBF file as artifact for next job
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.LATEST_PBF }}
          path: ${{ github.workspace }}/${{ env.LATEST_PBF }}

  generate-tiles:
    needs: update-pbf
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch gh-page
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - run: mkdir -p data/
      - uses: actions/download-artifact@v2
        with:
          name: ${{ env.LATEST_PBF }}
          path: data/

      - name: Use tilemaker Github Action
        uses: systemed/tilemaker@master
        with:
          input: data/${{ env.LATEST_PBF }}
          output: tiles/
          config: resources/config-openmaptiles.json
          process: resources/process-openmaptiles.lua

      - name: Commit newly-generated tiles
        run: |
          git config --local user.email "typebrook@gmail.com"
          git config --local user.name "typebrook"
          [ -n "$(git status --short)" ] && git add tiles/* && git commit -m 'update' && git push || true
